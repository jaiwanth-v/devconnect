{"version":3,"sources":["components/layout/Landing.jsx","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/auth/Login.jsx","components/auth/Register.jsx","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/layout/Alert.jsx","actions/profile.js","components/layout/Spinner.jsx","components/dashboard/DashboardActions.jsx","components/profile/ProfileTop.jsx","components/profile/ProfileAbout.jsx","components/profile/ProfileExperience.jsx","components/profile/ProfileEducation.jsx","components/profile/ProfileGithub.jsx","components/dashboard/Dashboard.jsx","components/routing/PrivateRoute.jsx","components/profile-forms/CreateProfile.jsx","components/profile-forms/EditProfile.jsx","components/profile-forms/AddExperience.jsx","components/profile-forms/AddEducation.jsx","components/profiles/ProfileItem.jsx","components/profiles/Profiles.jsx","components/profile/Profile.jsx","components/posts/PostItem.jsx","actions/post.js","components/posts/PostForm.jsx","components/posts/Posts.jsx","components/post/CommentForm.jsx","components/post/CommentItem.jsx","components/post/Post.jsx","components/layout/Navbar.jsx","App.js","index.js"],"names":["connect","state","isAuthenticated","auth","to","Fade","in","className","style","color","fontFamily","Button","variant","backgroundColor","borderRadius","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","handleSubmit","preventDefault","marginTop","width","height","onSubmit","validators","errorMessages","label","register","password2","ValidatorForm","addValidationRule","minLength","initialState","getItem","loading","user","profile","profiles","repos","posts","combineReducers","alert","action","filter","setItem","removeItem","_id","map","postId","likes","comments","comment","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Alert","alerts","alertComp","useAlert","length","success","propTypes","PropTypes","array","isRequired","getCurrentProfile","Promise","r","statusText","status","createProfile","history","edit","push","DashboardActions","company","location","website","social","avatar","src","alt","href","includes","rel","twitter","facebook","linkedin","youtube","instagram","ProfileAbout","bio","skills","dashboard","trim","split","skill","idx","key","ProfileExperience","experience","title","current","from","description","format","ProfileEducation","education","school","degree","fieldofstudy","getGithubRepos","username","githubusername","useEffect","Spinner","repo","html_url","stargazers_count","watchers_count","forks_count","withRouter","deleteAccount","window","confirm","delete","charAt","toUpperCase","slice","exp","edu","onClick","Component","component","rest","render","props","displaySocial","toggleSocialInputs","handleChange","fullWidth","placeholder","labelId","defaultValue","MenuItem","multiline","rows","toString","labelid","addExperience","put","toDateDisabled","toggleToDate","required","InputLabelProps","shrink","Checkbox","checked","disabled","addEducation","console","log","ProfileItem","getProfiles","reverse","getProfilebyId","userId","match","params","PostItem","addLike","removeLike","showActions","deletePost","text","date","fromNow","defaultProps","addPost","setText","getPosts","addComment","deleteComment","commentId","getPost","logout","isDark","setDark","AppBar","position","Grid","item","sm","xs","Toolbar","textDecoration","sunColor","moonColor","setFetchMethod","fetch","disableDarkMode","enableDarkMode","brightness","contrast","sepia","size","matchMedia","matches","activeClassName","App","exact","path","Landing","Login","Register","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","options","positions","BOTTOM_CENTER","transitions","FADE","offset","ReactDOM","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.67a4b81d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button, Fade } from \"@material-ui/core\";\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <Fade in={true}>\n      <section className=\"landing\">\n        <div className=\"dark-overlay\">\n          <div className=\"landing-inner\">\n            <h1\n              style={{ color: \"\", fontFamily: \"Montserrat\" }}\n              className=\"x-large\"\n            >\n              <i className=\"fas fa-code mr-1\"> </i> Dev Connect\n            </h1>\n            <h4 style={{ fontFamily: \"PT Sans\" }} className=\"mb-4\">\n              ● Connect ● Learn ● Grow\n            </h4>\n            <div className=\"buttons mb-4\">\n              <Link to=\"/register\" className=\"mr-2\">\n                <Button\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"rgb(0,100,255)\",\n                    color: \"#fff\",\n                    borderRadius: \"8%\",\n                  }}\n                >\n                  Sign up\n                </Button>\n              </Link>\n              <Link to=\"/login\">\n                <Button\n                  style={{\n                    backgroundColor: \"rgba(255,100,0,0.9)\",\n                    color: \"white\",\n                    borderRadius: \"8%\",\n                  }}\n                  variant=\"contained\"\n                >\n                  Login\n                </Button>\n              </Link>\n            </div>\n            <h5 style={{ fontFamily: \"PT Sans\" }}>\n              Sign in to share posts, create profile and get help from other\n              developers\n            </h5>\n          </div>\n        </div>\n      </section>\n    </Fade>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import { v4 as uuid } from \"uuid\";\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\n\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\n  const id = uuid();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n  setTimeout(() => {\n    dispatch({ type: REMOVE_ALERT, payload: id });\n  }, timeout);\n};\n","export const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCES\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const GET_PROFILES = \"GET_PROFILES\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const GET_POSTS = \"GET_POSTS\";\nexport const POST_ERROR = \"POST_ERROR\";\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const ADD_POST = \"ADD_POST\";\nexport const GET_POST = \"GET_POST\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from \"./types\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(\n      \"https://backend-devconnect.herokuapp.com/api/auth\"\n    );\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n  try {\n    const res = await axios.post(\n      \"https://backend-devconnect.herokuapp.com/api/users\",\n      body,\n      config\n    );\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\nexport const login = ({ email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n  try {\n    const res = await axios.post(\n      \"https://backend-devconnect.herokuapp.com/api/auth\",\n      body,\n      config\n    );\n\n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    await dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/auth\";\nimport { Button, Fade } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    login({ email, password });\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fade in={true}>\n      <div\n        style={{\n          marginTop: \"15vh\",\n          width: \"400px\",\n          height: \"400px\",\n          borderRadius: \"10px\",\n        }}\n        className=\"container login text-center shadow p-4 mb-md-5 mb-1 bg-white \"\n      >\n        <h2 className=\"large text-primary mb-4 \">Sign In</h2>\n\n        <ValidatorForm onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <TextValidator\n              name=\"email\"\n              validators={[\"required\", \"isEmail\"]}\n              onChange={onChange}\n              value={email}\n              errorMessages={[\"This field is required\", \"Email is invalid\"]}\n              label=\"Email Address\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"Password\"\n              onChange={onChange}\n              name=\"password\"\n              variant=\"outlined\"\n              type=\"password\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n              value={password}\n            />\n          </div>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            style={{ backgroundColor: \"rgb(26,115,232)\" }}\n            color=\"primary\"\n            className=\"m-3 w-50\"\n          >\n            Login\n          </Button>\n        </ValidatorForm>\n        <p className=\"my-1 \">\n          Don't have an account?{\" \"}\n          <Link className=\"text-primary\" to=\"/register\">\n            Sign Up\n          </Link>\n        </p>\n      </div>\n    </Fade>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../../actions/alert\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../actions/auth\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Button, Fade } from \"@material-ui/core\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  ValidatorForm.addValidationRule(\"isPasswordMatch\", (value) => {\n    if (value !== password) return false;\n    return true;\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    register({ name, email, password });\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fade in={true}>\n      <div\n        style={{\n          marginTop: \"10vh\",\n          width: \"400px\",\n          height: \"600px\",\n          borderRadius: \"10px\",\n        }}\n        className=\"container register text-center shadow p-4 mb-5 bg-white \"\n      >\n        <h1 className=\"large text-primary mb-4\">Sign Up</h1>\n\n        <ValidatorForm onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"Name\"\n              style={{ width: \"16rem\" }}\n              onChange={onChange}\n              name=\"name\"\n              variant=\"outlined\"\n              type=\"text\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n              value={name}\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              name=\"email\"\n              style={{ width: \"16rem\" }}\n              validators={[\"required\", \"isEmail\"]}\n              onChange={onChange}\n              value={email}\n              errorMessages={[\"This field is required\", \"Email is invalid\"]}\n              label=\"Email Address\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"Password\"\n              style={{ width: \"16rem\" }}\n              onChange={onChange}\n              name=\"password\"\n              variant=\"outlined\"\n              type=\"password\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n              value={password}\n              minLength=\"6\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              style={{ width: \"16rem\" }}\n              label=\"Confirm Password\"\n              onChange={onChange}\n              name=\"password2\"\n              type=\"password\"\n              validators={[\"isPasswordMatch\", \"required\"]}\n              errorMessages={[\n                \"Passwords don't match\",\n                \"this field is required\",\n              ]}\n              value={password2}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            style={{ backgroundColor: \"rgb(26,115,232)\" }}\n            color=\"primary\"\n            className=\"m-3 w-50\"\n          >\n            Register\n          </Button>\n        </ValidatorForm>\n        <p className=\"my-1\">\n          Already have an account?{\" \"}\n          <Link className=\"text-primary\" to=\"/login\">\n            Sign In\n          </Link>\n        </p>\n        <small>\n          This website uses Gravatar so if you want <br /> a profile image, use\n          a Gravatar email\n        </small>\n      </div>\n    </Fade>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  DELETE_ACCOUNT,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case DELETE_ACCOUNT:\n      if (localStorage.token) localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n} from \"../actions/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n      };\n\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport profile from \"./profile\";\nimport post from \"./post\";\n\nexport default combineReducers({ alert, auth, profile, post });\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\n\nconst Alert = ({ alerts }) => {\n  const alertComp = useAlert();\n  return (\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map((alert) => {\n      if (alert.alertType === \"success\") alertComp.success(alert.msg);\n      if (alert.alertType === \"danger\") alertComp.error(alert.msg);\n      return null;\n    })\n  );\n};\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import axios from \"axios\";\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  DELETE_ACCOUNT,\n  GET_PROFILES,\n  GET_REPOS,\n} from \"./types\";\nimport { setAlert } from \"./alert\";\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    await new Promise((r) => setTimeout(r, 50));\n    const res = await axios.get(\n      \"https://backend-devconnect.herokuapp.com/api/profile/me\"\n    );\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get(\n      \"https://backend-devconnect.herokuapp.com/api/profile/\"\n    );\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getProfilebyId = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `https://backend-devconnect.herokuapp.com/api/profile/${userId}`\n    );\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `https://backend-devconnect.herokuapp.com/api/profile/github/${username}`\n    );\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await axios.post(\n      \"https://backend-devconnect.herokuapp.com/api/profile\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await axios.put(\n      \"https://backend-devconnect.herokuapp.com/api/profile/experience\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Experience added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await axios.put(\n      \"https://backend-devconnect.herokuapp.com/api/profile/education\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Education added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(errors);\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(\n      `https://backend-devconnect.herokuapp.com/api/profile/experience/${id}`\n    );\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Experience removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(\n      `https://backend-devconnect.herokuapp.com/api/profile/education/${id}`\n    );\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Education removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const deleteAccount = (history) => async (dispatch) => {\n  if (window.confirm(\"Are you sure? This can NOT be undone\")) {\n    try {\n      await axios.delete(\n        `https://backend-devconnect.herokuapp.com/api/profile`\n      );\n      dispatch({\n        type: CLEAR_PROFILE,\n      });\n\n      dispatch({\n        type: DELETE_ACCOUNT,\n      });\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\n      history.push(\"/login\");\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nexport default () => (\n  <div className=\"text-center mt-5 pt-5 \">\n    <Loader type=\"ThreeDots\" color=\"#00bfff\" height={100} width={100} />\n  </div>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DashboardActions = () => {\n  return (\n    <div className=\"dash-buttons\">\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\n      </Link>\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\n        <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\n      </Link>\n      <Link to=\"/add-education\" className=\"btn btn-light\">\n        <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user,\n    user: { name, avatar },\n    auth,\n  },\n}) => {\n  return (\n    <div className=\"profile-top bg-primary  p-2\">\n      <img className=\"round-img my-1 mt-4\" src={avatar} alt=\"\" />\n      <h1 className=\"large\" style={{ color: \"#fff\" }}>\n        {name}\n      </h1>\n      <p className=\"lead\" style={{ color: \"#fff\" }}>\n        {status} {company && <span>at {company} </span>}\n      </p>\n      <p style={{ color: \"#fff\" }}> {location && <span>{location}</span>} </p>\n      <div className=\"icons my-1\">\n        {website && (\n          <a\n            href={`${\n              website.includes(\"http\") ? website : `https://${website}`\n            }`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fas fa-globe fa-2x\"></i>\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-twitter fa-2x\"></i>\n          </a>\n        )}\n        {social && social.facebook && (\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-facebook fa-2x\"></i>\n          </a>\n        )}\n        {social && social.linkedin && (\n          <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-linkedin fa-2x\"></i>\n          </a>\n        )}\n        {social && social.youtube && (\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-youtube fa-2x\"></i>\n          </a>\n        )}\n        {social && social.instagram && (\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-instagram fa-2x\"></i>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(ProfileTop);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n  dashboard = true,\n}) => {\n  return (\n    <div className=\"profile-about bg-light p-2\">\n      {bio && (\n        <>\n          {dashboard ? <h2 className=\"text-primary\">Bio</h2> : null}\n          {!dashboard ? (\n            <h2 className=\"text-primary\">\n              {\" \"}\n              {name.trim().split(\" \")[0]}'s Bio{\" \"}\n            </h2>\n          ) : null}\n          <p>{bio}</p>\n          <div className=\"line\"></div>\n        </>\n      )}\n\n      <h2 className=\"text-primary\">Skill Set</h2>\n      <div className=\"skills\">\n        {skills.map((skill, idx) => (\n          <div className=\"p-1\" key={idx}>\n            <i className=\"fa fa-check\"></i> {skill}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description },\n}) => {\n  return (\n    <div>\n      <h3 className=\"text-dark\"> {company} </h3>\n      <p>\n        <Moment format=\"YYYY/MM/DD\">{from}</Moment> -\n        {!to ? \"Now\" : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n      </p>\n      <p>\n        <strong>Position: </strong>\n        {title}\n      </p>\n      {description ? (\n        <p>\n          <strong>Description: </strong> {description}\n        </p>\n      ) : null}\n    </div>\n  );\n};\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description },\n}) => {\n  return (\n    <div>\n      <h3 className=\"text-dark\"> {school} </h3>\n      <p>\n        <Moment format=\"YYYY/MM/DD\">{from}</Moment> -\n        {!to ? \"Now\" : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n      </p>\n      <p>\n        <strong>Degree: </strong>\n        {degree}\n      </p>\n      {fieldofstudy ? (\n        <p>\n          <strong>Field of Study: </strong>\n          {fieldofstudy}\n        </p>\n      ) : null}\n      {description ? (\n        <p>\n          <strong>Description: </strong> {description}\n        </p>\n      ) : null}\n    </div>\n  );\n};\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getGithubRepos } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst ProfileGithub = ({ getGithubRepos, githubusername, repos }) => {\n  useEffect(() => {\n    getGithubRepos(githubusername);\n  }, [getGithubRepos, githubusername]);\n  return (\n    <div className=\"profile-github ml-2\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repo, idx) => (\n          <div key={idx} className=\"repo bg-white p-1 my-1\">\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className=\"badge badge-primary\">\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className=\"badge badge-dark\">\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  githubusername: PropTypes.string.isRequired,\n  repos: PropTypes.array.isRequired,\n  getGithubRepos: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\nimport PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport DashboardActions from \"./DashboardActions\";\nimport { Fade, Button } from \"@material-ui/core\";\nimport ProfileTop from \"../profile/ProfileTop\";\nimport ProfileAbout from \"../profile/ProfileAbout\";\nimport ProfileExperience from \"../profile/ProfileExperience\";\nimport ProfileEducation from \"../profile/ProfileEducation\";\nimport ProfileGithub from \"../profile/ProfileGithub\";\n\nconst Dashboard = ({\n  history,\n  deleteAccount,\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile == null && user === null ? (\n    <Spinner />\n  ) : (\n    <Fade in={!loading}>\n      <div className=\" m-4\">\n        <h1 className=\"large text-center text-primary\">Dashboard</h1>\n        <p className=\"lead text-center\">\n          <i className=\"fas fa-user\"></i> Welcome{\" \"}\n          {user && user.name.charAt(0).toUpperCase() + user.name.slice(1)}\n        </p>\n\n        {profile != null ? (\n          <Fragment>\n            <div className=\"text-center\">\n              <DashboardActions />\n              <h2 className=\"my-3 text-primary\">Your Profile: </h2>\n            </div>\n            <div>\n              <Fade in={!loading}>\n                <div className=\"profile-grid my-1\">\n                  <ProfileTop profile={profile} />\n                  <ProfileAbout profile={profile} />\n                  <div className=\"profile-exp bg-white p-2\">\n                    <h2 className=\"text-primary\">Experience</h2>\n                    {profile && profile.experience.length > 0 ? (\n                      <>\n                        {profile.experience.map((exp) => (\n                          <ProfileExperience key={exp._id} experience={exp} />\n                        ))}\n                      </>\n                    ) : (\n                      <h4>No experience credentials</h4>\n                    )}\n                  </div>\n                  <div className=\"profile-edu bg-white p-2\">\n                    <h2 className=\"text-primary\">Education</h2>\n                    {profile.education.length > 0 ? (\n                      <>\n                        {profile.education.map((edu) => (\n                          <ProfileEducation key={edu._id} education={edu} />\n                        ))}\n                      </>\n                    ) : (\n                      <h4>No education credentials</h4>\n                    )}\n                  </div>\n\n                  {profile.githubusername && (\n                    <ProfileGithub githubusername={profile.githubusername} />\n                  )}\n                </div>\n              </Fade>\n            </div>\n          </Fragment>\n        ) : (\n          <div className=\"text-center\">\n            <p>\n              You haven't setup a profile yet, please create one to get started.\n            </p>\n            <Link to=\"/create-profile\" className=\" my-1\">\n              <Button color=\"primary\" variant=\"contained\">\n                Create profile\n              </Button>\n            </Link>\n          </div>\n        )}\n\n        <div className={`mt-4 ${!profile && \"text-center\"}`}>\n          <Button\n            style={{ backgroundColor: \"rgb(230,0,1)\", color: \"white\" }}\n            variant=\"contained\"\n            onClick={() => deleteAccount(history)}\n          >\n            Delete My Account\n          </Button>\n        </div>\n      </div>\n    </Fade>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard)\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading, user },\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuthenticated && !loading ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { createProfile } from \"../../actions/profile\";\nimport { Button, MenuItem } from \"@material-ui/core\";\nimport {\n  SelectValidator,\n  TextValidator,\n  ValidatorForm,\n} from \"react-material-ui-form-validator\";\n\nconst CreateProfile = ({ history, createProfile }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const [displaySocial, toggleSocialInputs] = useState(false);\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        Let's get some information to make your profile stand out\n      </p>\n      <ValidatorForm onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <SelectValidator\n            validators={[\"required\"]}\n            errorMessages={[\"This field is required\"]}\n            fullWidth\n            label=\"* Status\"\n            placeholder=\"* Status\"\n            name=\"status\"\n            labelId=\"selectlabel\"\n            value={status}\n            variant=\"outlined\"\n            onChange={handleChange}\n            defaultValue={0}\n          >\n            <MenuItem value=\"Web Developer\">Web Developer</MenuItem>\n            <MenuItem value=\"Junior Developer\">Junior Developer</MenuItem>\n            <MenuItem value=\"Senior Developer\">Senior Developer</MenuItem>\n            <MenuItem value=\"Manager\">Manager</MenuItem>\n            <MenuItem value=\"Instructor\">Instructor or Teacher</MenuItem>\n            <MenuItem value=\"Intern\">Intern</MenuItem>\n            <MenuItem value=\"Other\">Other</MenuItem>\n          </SelectValidator>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            type=\"text\"\n            variant=\"outlined\"\n            label=\"Company\"\n            fullWidth\n            placeholder=\"Company\"\n            value={company}\n            name=\"company\"\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            fullWidth\n            label=\"Website\"\n            variant=\"outlined\"\n            type=\"text\"\n            placeholder=\"Website\"\n            value={website}\n            onChange={handleChange}\n            name=\"website\"\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            fullWidth\n            label=\"Location\"\n            variant=\"outlined\"\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            onChange={handleChange}\n            value={location}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Hyderabad, TS)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            fullWidth\n            label=\"* Skills\"\n            validators={[\"required\"]}\n            errorMessages={[\"This field is required\"]}\n            variant=\"outlined\"\n            type=\"text\"\n            placeholder=\"Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            fullWidth\n            label=\"Github Username\"\n            variant=\"outlined\"\n            type=\"text\"\n            value={githubusername}\n            onChange={handleChange}\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            multiline\n            rows={3}\n            label=\"Bio\"\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            onChange={handleChange}\n            value={bio}\n          ></TextValidator>\n\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <Button\n            onClick={() => toggleSocialInputs(!displaySocial)}\n            variant=\"contained\"\n          >\n            Add Social Network Links\n          </Button>\n          <span> (Optional) </span>\n        </div>\n\n        {displaySocial && (\n          <>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                label=\"Twitter\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                value={twitter}\n                onChange={handleChange}\n                name=\"twitter\"\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                variant=\"outlined\"\n                type=\"text\"\n                label=\"Facebook\"\n                placeholder=\"Facebook URL\"\n                value={facebook}\n                onChange={handleChange}\n                name=\"facebook\"\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                variant=\"outlined\"\n                type=\"text\"\n                label=\"YouTube\"\n                placeholder=\"YouTube URL\"\n                value={youtube}\n                onChange={handleChange}\n                name=\"youtube\"\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                label=\"LinkedIn\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                value={linkedin}\n                onChange={handleChange}\n                name=\"linkedin\"\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                variant=\"outlined\"\n                type=\"text\"\n                label=\"Instagram\"\n                placeholder=\"Instagram URL\"\n                value={instagram}\n                onChange={handleChange}\n                name=\"instagram\"\n              />\n            </div>\n          </>\n        )}\n\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className=\"btn my-1\"\n        >\n          Submit\n        </Button>\n        <Link className=\" ml-2 my-1\" to=\"/dashboard\">\n          <Button variant=\"outlined\" color=\"primary\" className=\"btn my-1\">\n            Go Back\n          </Button>\n        </Link>\n      </ValidatorForm>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n};\n\nexport default withRouter(connect(null, { createProfile })(CreateProfile));\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\nimport { useEffect } from \"react\";\nimport { Button, MenuItem } from \"@material-ui/core\";\nimport {\n  TextValidator,\n  SelectValidator,\n  ValidatorForm,\n} from \"react-material-ui-form-validator\";\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  history,\n  getCurrentProfile,\n  createProfile,\n}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const [displaySocial, toggleSocialInputs] = useState(false);\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const handleSubmit = (e) => {\n    createProfile(formData, history, true);\n  };\n\n  useEffect(() => {\n    getCurrentProfile();\n    setFormData({\n      skills: loading || !profile.skills ? \"\" : profile.skills.toString(),\n      status: loading || !profile.status ? \"\" : profile.status,\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      githubusername:\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\n    });\n  }, [getCurrentProfile]);\n  return (\n    <>\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\n      <p className=\"lead\">\n        Let's get some information to make your profile stand out\n      </p>\n      <ValidatorForm onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <SelectValidator\n            validators={[\"required\"]}\n            errorMessages={[\"This field is required\"]}\n            fullWidth\n            label=\"* Status\"\n            placeholder=\"* Status\"\n            name=\"status\"\n            labelid=\"selectlabel\"\n            value={status}\n            variant=\"outlined\"\n            onChange={handleChange}\n            defaultValue={0}\n          >\n            <MenuItem value=\"Web Developer\">Web Developer</MenuItem>\n            <MenuItem value=\"Junior Developer\">Junior Developer</MenuItem>\n            <MenuItem value=\"Senior Developer\">Senior Developer</MenuItem>\n            <MenuItem value=\"Manager\">Manager</MenuItem>\n            <MenuItem value=\"Student\">Student</MenuItem>\n            <MenuItem value=\"Instructor\">Instructor or Teacher</MenuItem>\n            <MenuItem value=\"Intern\">Intern</MenuItem>\n            <MenuItem value=\"Other\">Other</MenuItem>\n          </SelectValidator>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            type=\"text\"\n            variant=\"outlined\"\n            label=\"Company\"\n            fullWidth\n            placeholder=\"Company\"\n            value={company}\n            name=\"company\"\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            fullWidth\n            label=\"Website\"\n            variant=\"outlined\"\n            type=\"text\"\n            placeholder=\"Website\"\n            value={website}\n            onChange={handleChange}\n            name=\"website\"\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            fullWidth\n            label=\"Location\"\n            variant=\"outlined\"\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            onChange={handleChange}\n            value={location}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Hyderabad, TS)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            fullWidth\n            label=\"* Skills\"\n            validators={[\"required\"]}\n            errorMessages={[\"This field is required\"]}\n            variant=\"outlined\"\n            type=\"text\"\n            placeholder=\"Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            fullWidth\n            label=\"Github Username\"\n            variant=\"outlined\"\n            type=\"text\"\n            value={githubusername}\n            onChange={handleChange}\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <TextValidator\n            multiline\n            rows={3}\n            label=\"Bio\"\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            onChange={handleChange}\n            value={bio}\n          ></TextValidator>\n\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <Button\n            onClick={() => toggleSocialInputs(!displaySocial)}\n            variant=\"contained\"\n          >\n            Add Social Network Links\n          </Button>\n          <span> (Optional) </span>\n        </div>\n\n        {displaySocial && (\n          <>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                label=\"Twitter\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                value={twitter}\n                onChange={handleChange}\n                name=\"twitter\"\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                variant=\"outlined\"\n                type=\"text\"\n                label=\"Facebook\"\n                placeholder=\"Facebook URL\"\n                value={facebook}\n                onChange={handleChange}\n                name=\"facebook\"\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                variant=\"outlined\"\n                type=\"text\"\n                label=\"YouTube\"\n                placeholder=\"YouTube URL\"\n                value={youtube}\n                onChange={handleChange}\n                name=\"youtube\"\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                label=\"LinkedIn\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                value={linkedin}\n                onChange={handleChange}\n                name=\"linkedin\"\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <TextValidator\n                fullWidth\n                variant=\"outlined\"\n                type=\"text\"\n                label=\"Instagram\"\n                placeholder=\"Instagram URL\"\n                value={instagram}\n                onChange={handleChange}\n                name=\"instagram\"\n              />\n            </div>\n          </>\n        )}\n\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className=\"btn my-1\"\n        >\n          Submit\n        </Button>\n        <Link className=\" ml-2 my-1\" to=\"/dashboard\">\n          <Button variant=\"outlined\" color=\"primary\" className=\"btn my-1\">\n            Go Back\n          </Button>\n        </Link>\n      </ValidatorForm>\n    </>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { createProfile, getCurrentProfile })(EditProfile)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { Checkbox, Fade } from \"@material-ui/core\";\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    title: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleToDate] = useState(false);\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    addExperience(formData, history);\n  };\n\n  return (\n    <Fade in={true}>\n      <>\n        <h1 className=\"large text-primary\">Add An Experience</h1>\n        <p className=\"lead\">\n          <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n          positions that you have had in the past\n        </p>\n        <ValidatorForm onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <TextValidator\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n              label=\"Job Title\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n              placeholder=\"Job Title *\"\n              onChange={handleChange}\n              value={title}\n              name=\"title\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              type=\"text\"\n              variant=\"outlined\"\n              label=\"Company *\"\n              fullWidth\n              placeholder=\"Company\"\n              onChange={handleChange}\n              value={company}\n              name=\"company\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"Location\"\n              variant=\"outlined\"\n              type=\"text\"\n              fullWidth\n              placeholder=\"Location\"\n              onChange={handleChange}\n              value={location}\n              name=\"location\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"From\"\n              variant=\"outlined\"\n              fullWidth\n              type=\"date\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n              onChange={handleChange}\n              value={from}\n              name=\"from\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </div>\n          <div className=\"form-group\">\n            <p>\n              Current Job\n              <Checkbox\n                type=\"checkbox\"\n                name=\"current\"\n                color=\"primary\"\n                className=\"mb-1\"\n                value={current}\n                checked={current}\n                onChange={(e) => {\n                  setFormData({ ...formData, current: !current });\n                  toggleToDate(!toDateDisabled);\n                }}\n              />\n            </p>\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"To\"\n              type=\"date\"\n              id=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleChange}\n              value={to}\n              name=\"to\"\n              disabled={toDateDisabled ? true : false}\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              multiline\n              fullWidth\n              variant=\"outlined\"\n              label=\"Description\"\n              name=\"description\"\n              rows={3}\n              placeholder=\"Job Description\"\n              value={description}\n              onChange={handleChange}\n            ></TextValidator>\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary my-1\" />\n          <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n            Go Back\n          </Link>\n        </ValidatorForm>\n        <small className=\"my-2\">(Note: You can't edit this later)</small>\n      </>\n    </Fade>\n  );\n};\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default withRouter(connect(null, { addExperience })(AddExperience));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Checkbox, Fade } from \"@material-ui/core\";\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    fieldofstudy: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleToDate] = useState(false);\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData;\n\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addEducation(formData, history);\n  };\n\n  return (\n    <Fade in={true}>\n      <>\n        <h1 className=\"large text-primary\">Add Your Education</h1>\n        <p className=\"lead\">\n          <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp that\n          you have attended in the past\n        </p>\n        <ValidatorForm onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <TextValidator\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n              label=\"School or College\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n              placeholder=\"* School or College\"\n              onChange={handleChange}\n              value={school}\n              name=\"school\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              type=\"text\"\n              variant=\"outlined\"\n              label=\"Degree *\"\n              fullWidth\n              placeholder=\"Degree\"\n              onChange={handleChange}\n              value={degree}\n              name=\"degree\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"Field of Study\"\n              variant=\"outlined\"\n              type=\"text\"\n              fullWidth\n              placeholder=\"Field of Study\"\n              onChange={handleChange}\n              value={fieldofstudy}\n              name=\"fieldofstudy\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"From\"\n              variant=\"outlined\"\n              fullWidth\n              type=\"date\"\n              validators={[\"required\"]}\n              errorMessages={[\"This field is required\"]}\n              onChange={handleChange}\n              value={from}\n              name=\"from\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </div>\n          <div className=\"form-group\">\n            <p>\n              Currently Studying\n              <Checkbox\n                type=\"checkbox\"\n                name=\"current\"\n                className=\"mb-1\"\n                color=\"primary\"\n                value={current}\n                checked={current}\n                onChange={(e) => {\n                  setFormData({ ...formData, current: !current });\n                  toggleToDate(!toDateDisabled);\n                }}\n              />\n            </p>\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              label=\"To\"\n              type=\"date\"\n              id=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleChange}\n              value={to}\n              name=\"to\"\n              disabled={toDateDisabled ? true : false}\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextValidator\n              multiline\n              fullWidth\n              variant=\"outlined\"\n              label=\"Description\"\n              name=\"description\"\n              rows={3}\n              placeholder=\"Program Description\"\n              value={description}\n              onChange={handleChange}\n            ></TextValidator>\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary my-1\" />\n          <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n            Go Back\n          </Link>\n        </ValidatorForm>\n        <small className=\"my-2\">(Note: You can't edit this later)</small>\n      </>\n    </Fade>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default withRouter(connect(null, { addEducation })(AddEducation));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst ProfileItem = ({\n  profile: { user, status, company, location, skills },\n}) => {\n  return (\n    user && (\n      <div className=\"profile bg-light\">\n        <img className=\"round-img\" src={user.avatar} alt=\"\" />\n        <div className=\"text-center\">\n          <h2>{user.name}</h2>\n          <p>\n            {status} {company && <span>at {company}</span>}{\" \"}\n          </p>\n          <p> {location && <span>{location}</span>} </p>\n          <Link to={`/profile/${user._id}`} className=\"btn btn-primary\">\n            View Profile\n          </Link>\n        </div>\n\n        <ul>\n          {skills.slice(0, 4).map((skill, idx) => (\n            <li key={idx} className=\"text-primary\">\n              <i className=\"fas fa-check\"></i> {skill}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { connect } from \"react-redux\";\nimport { getProfiles } from \"../../actions/profile\";\nimport { useEffect } from \"react\";\nimport ProfileItem from \"./ProfileItem\";\nimport { Fade } from \"@material-ui/core\";\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return (\n    <Fragment>\n      <div>\n        <h1 className=\"large  text-center text-primary\">Developers</h1>\n        <p className=\"lead text-center \">\n          <i className=\"fab fa-connectdevelop\"></i> Browse and connect with\n          developers\n        </p>\n        {loading || profiles.length === 0 ? (\n          <Spinner />\n        ) : (\n          <Fade in={profiles.length > 0}>\n            <div className=\"profiles\">\n              {profiles.length > 0\n                ? [...profiles]\n                    .reverse()\n                    .map((profile) => (\n                      <ProfileItem key={profile._id} profile={profile} />\n                    ))\n                : null}\n            </div>\n          </Fade>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getProfilebyId } from \"../../actions/profile\";\nimport { useEffect } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\nimport { Fade } from \"@material-ui/core\";\n\nconst Profile = ({\n  getProfilebyId,\n  match: {\n    params: { id },\n  },\n  profile: { loading, profile },\n  auth,\n}) => {\n  useEffect(() => {\n    getProfilebyId(id);\n  }, [getProfilebyId, id]);\n  return (\n    <>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div className=\"text-center\">\n            {auth.isAuthenticated &&\n              !auth.loading &&\n              auth.user._id === profile.user._id && (\n                <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                  Edit Profile\n                </Link>\n              )}\n            <Link to=\"/profiles\" className=\"btn btn-light\">\n              Back To Profiles\n            </Link>\n          </div>\n          <Fade in={!loading}>\n            <div className=\"profile-grid my-1\">\n              <ProfileTop profile={profile} />\n              <ProfileAbout profile={profile} dashboard={false} />\n              <div className=\"profile-exp bg-white p-2\">\n                <h2 className=\"text-primary\">Experience</h2>\n                {profile.experience.length > 0 ? (\n                  <>\n                    {profile.experience.map((exp) => (\n                      <ProfileExperience key={exp._id} experience={exp} />\n                    ))}\n                  </>\n                ) : (\n                  <h4>No experience credentials</h4>\n                )}\n              </div>\n              <div className=\"profile-edu bg-white p-2\">\n                <h2 className=\"text-primary\">Education</h2>\n                {profile.education.length > 0 ? (\n                  <>\n                    {profile.education.map((edu) => (\n                      <ProfileEducation key={edu._id} education={edu} />\n                    ))}\n                  </>\n                ) : (\n                  <h4>No education credentials</h4>\n                )}\n              </div>\n              {profile.githubusername && (\n                <ProfileGithub githubusername={profile.githubusername} />\n              )}\n            </div>\n          </Fade>\n        </div>\n      )}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  getProfilebyId: PropTypes.func,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfilebyId })(Profile);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\nimport { Button } from \"@material-ui/core\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  auth,\n  showActions,\n  deletePost,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n}) => {\n  return (\n    <div className=\"post shadow-sm rounded bg-white mb-4 my-1\">\n      <div style={{ height: \"140px\" }}>\n        <img\n          className=\"round-img ml-1\"\n          style={{ height: \"100px\", width: \"100px\" }}\n          src={avatar}\n          alt=\"\"\n        />\n        <Link to={`/profile/${user}`}>\n          <h4> {name} </h4>\n        </Link>\n      </div>\n      <div>\n        <div className=\"ml-md-3\">\n          <p className=\"my-1\">{text}</p>\n          <p className=\"post-date\">\n            Posted <Moment fromNow>{date}</Moment>{\" \"}\n          </p>\n        </div>\n        {showActions && (\n          <div className=\"d-flex\">\n            <Button\n              onClick={(e) => addLike(_id)}\n              type=\"Button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-up\"></i>\n              {likes.length > 0 && <span className=\"ml-1\">{likes.length}</span>}\n            </Button>\n            <Button\n              onClick={(e) => removeLike(_id)}\n              type=\"Button\"\n              className=\"btn btn-light mr-2\"\n            >\n              <i className=\"fas fa-thumbs-down\"></i>\n            </Button>\n            <Link to={`/posts/${_id}`}>\n              <Button className=\"btn btn-light\">\n                Discussion{\" \"}\n                {comments.length > 0 && <span>({comments.length})</span>}\n              </Button>\n            </Link>\n            {!auth.loading && user === auth.user._id && (\n              <Button\n                onClick={() => deletePost(_id)}\n                type=\"Button\"\n                className=\"btn \"\n              >\n                <i className=\"fas fa-trash\"></i>\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool,\n};\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"./types\";\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      \"https://backend-devconnect.herokuapp.com/api/posts\"\n    );\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const addLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(\n      `https://backend-devconnect.herokuapp.com/api/posts/like/${postId}`\n    );\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postId, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const removeLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(\n      `https://backend-devconnect.herokuapp.com/api/posts/unlike/${postId}`\n    );\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postId, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\nexport const deletePost = (postId) => async (dispatch) => {\n  try {\n    await axios.delete(\n      `https://backend-devconnect.herokuapp.com/api/posts/${postId}`\n    );\n    dispatch({\n      type: DELETE_POST,\n      payload: postId,\n    });\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const addPost = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const post = JSON.stringify(formData);\n    const res = await axios.post(\n      \"https://backend-devconnect.herokuapp.com/api/posts\",\n      post,\n      config\n    );\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `https://backend-devconnect.herokuapp.com/api/posts/${id}`\n    );\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const addComment = (postId, formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await axios.post(\n      `https://backend-devconnect.herokuapp.com/api/posts/comments/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await axios.delete(\n      `https://backend-devconnect.herokuapp.com/api/posts/comments/${postId}/${commentId}`\n    );\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\nimport { useState } from \"react\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { Button } from \"@material-ui/core\";\n\nconst PostForm = ({ addPost, user: { name, avatar } }) => {\n  const [text, setText] = useState(\"\");\n  return (\n    <div className=\"post shadow-sm rounded mb-5 \">\n      <div>\n        <img\n          style={{ height: \"100px\", width: \"100px\" }}\n          className=\"round-img mb-4\"\n          src={avatar}\n          alt=\"avatar\"\n        />\n        <h4> {name} </h4>\n      </div>\n\n      <div className=\"d-flex flex-column\">\n        <ValidatorForm\n          className=\"m-3 mr-md-3 mt-5\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            addPost({ text });\n            setText(\"\");\n          }}\n        >\n          <TextValidator\n            name=\"text\"\n            multiline\n            rows={4}\n            fullWidth\n            validators={[\"required\"]}\n            errorMessages={[\"The post cannot be empty\"]}\n            variant=\"outlined\"\n            label=\"Create a post\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Create a post\"\n          ></TextValidator>\n          <div className=\"d-flex flex-column\">\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              style={{\n                backgroundColor: \"rgb(0,120,200)\",\n                color: \"white\",\n              }}\n              className=\"my-1\"\n              value=\"Submit\"\n            >\n              Post\n            </Button>\n          </div>\n        </ValidatorForm>\n      </div>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { addPost })(PostForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getPosts } from \"../../actions/post\";\nimport Spinner from \"../layout/Spinner\";\nimport { useEffect } from \"react\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <div>\n      <h1 className=\"large text-primary text-center ml-md-5\">Posts</h1>\n      <PostForm />\n      <div className=\"d-flex flex-column justify-content-center\">\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actions/post\";\nimport { useState } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Button } from \"@material-ui/core\";\n\nconst CommentForm = ({ addComment, postId }) => {\n  const [text, setText] = useState(\"\");\n  return (\n    <div className=\"mb-5 \">\n      <ValidatorForm\n        className=\"m-3  mt-5\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          addComment(postId, { text });\n          setText(\"\");\n        }}\n      >\n        <div className=\"d-flex flex-column\">\n          <TextValidator\n            name=\"text\"\n            multiline\n            fullWidth\n            rows={2}\n            variant=\"outlined\"\n            label=\"Leave a comment\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Comment on this post\"\n          ></TextValidator>\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            style={{\n              backgroundColor: \"rgb(0,120,200)\",\n              color: \"white\",\n            }}\n            className=\"my-1\"\n            value=\"Submit\"\n          >\n            Comment\n          </Button>\n        </div>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\nimport { Button } from \"@material-ui/core\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => {\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4> {name} </h4>\n        </Link>\n      </div>\n      <div>\n        <div className=\"ml-md-4\">\n          <p className=\"my-1\">{text}</p>\n          <p className=\"post-date\">\n            Posted <Moment fromNow>{date}</Moment>\n          </p>\n        </div>\n        <div>\n          {!auth.loading && user === auth.user._id && (\n            <Button\n              onClick={() => deleteComment(postId, _id)}\n              type=\"button\"\n              className=\"btn \"\n            >\n              <i className=\"fas fa-trash\"></i>\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getPost } from \"../../actions/post\";\nimport { useEffect } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <>\n      <div className=\"text-center\">\n        <Link to=\"/posts\" className=\"btn\">\n          Back To Posts\n        </Link>\n      </div>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className=\"comments ml-md-5\">\n        {post.comments.length ? <h2>Comments: </h2> : null}\n        <br />\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React, { useState } from \"react\";\nimport { Grid, Button, AppBar, Toolbar } from \"@material-ui/core\";\nimport \"./Navbar.scss\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\nimport {\n  enable as enableDarkMode,\n  disable as disableDarkMode,\n  setFetchMethod,\n} from \"darkreader\";\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const [isDark, setDark] = useState(false);\n  const toggleDarkMode = () => {\n    setFetchMethod(window.fetch);\n\n    !isDark\n      ? enableDarkMode({\n          brightness: 100,\n          contrast: 100,\n          sepia: 10,\n        })\n      : disableDarkMode();\n    setDark(!isDark);\n  };\n  const authLinks = () => (\n    <>\n      <NavLink\n        activeClassName=\"loginButton\"\n        style={{ textDecoration: \"none\" }}\n        to=\"/profiles\"\n      >\n        <Button color=\"inherit\" className=\"buttonFontSize \">\n          Developers\n        </Button>\n      </NavLink>\n      <NavLink\n        activeClassName=\"loginButton\"\n        style={{ textDecoration: \"none\" }}\n        to=\"/posts\"\n      >\n        <Button color=\"inherit\" className=\"buttonFontSize \">\n          Posts\n        </Button>\n      </NavLink>\n      <NavLink\n        activeClassName=\"loginButton\"\n        style={{ textDecoration: \"none\" }}\n        to=\"/dashboard\"\n      >\n        <Button color=\"inherit\" className=\"buttonFontSize \">\n          Dashboard\n        </Button>\n      </NavLink>\n      <NavLink style={{ textDecoration: \"none\" }} to=\"/\" onClick={logout}>\n        <Button color=\"inherit\" className=\"buttonFontSize \">\n          Logout\n        </Button>\n      </NavLink>\n    </>\n  );\n  const guestLinks = () => (\n    <>\n      <NavLink\n        activeClassName=\"loginButton\"\n        style={{ textDecoration: \"none\" }}\n        to=\"/profiles\"\n      >\n        <Button color=\"inherit\" className=\"buttonFontSize\">\n          Developers\n        </Button>\n      </NavLink>\n\n      <NavLink\n        activeClassName=\"loginButton\"\n        style={{ textDecoration: \"none\" }}\n        to=\"/login\"\n      >\n        <Button color=\"inherit\" className=\"buttonFontSize\">\n          Login\n        </Button>\n      </NavLink>\n      <NavLink\n        activeClassName=\"loginButton\"\n        style={{ textDecoration: \"none\" }}\n        to=\"/register\"\n      >\n        <Button color=\"inherit\" className=\"buttonFontSize \">\n          Register\n        </Button>\n      </NavLink>\n    </>\n  );\n\n  return (\n    <nav className=\"mb-4\">\n      <AppBar position=\"static\" className={`AppBar`}>\n        <Grid item sm={12} xs={12} className=\"container\">\n          <Toolbar>\n            <Grid className=\"grow\">\n              <Link\n                style={{\n                  color: \"white\",\n                  textDecoration: \"none\",\n                }}\n                to=\"/\"\n              >\n                <Button className=\"buttonFontSize\">\n                  <i className=\"fas fa-code mr-1\"> </i>dev Connect\n                </Button>\n              </Link>\n            </Grid>\n\n            <DarkModeSwitch\n              className=\"mr-3\"\n              sunColor={\"\"}\n              moonColor={\"rgba(255,255,256,1)\"}\n              onClick={toggleDarkMode}\n              checked={!isDark}\n              size={window.matchMedia(\"(max-width: 800px)\").matches ? 17 : 20}\n            />\n            <div className=\"NavLinks d-flex\">\n              <>{isAuthenticated ? authLinks() : guestLinks()} </>\n            </div>\n          </Toolbar>\n        </Grid>\n      </AppBar>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React, { Fragment, useEffect } from \"react\";\nimport \"./App.css\";\nimport Landing from \"./components/layout/Landing\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Alert from \"./components/layout/Alert\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { loadUser } from \"./actions/auth\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport CreateProfile from \"./components/profile-forms/CreateProfile\";\nimport EditProfile from \"./components/profile-forms/EditProfile\";\nimport AddExperience from \"./components/profile-forms/AddExperience\";\nimport AddEducation from \"./components/profile-forms/AddEducation\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/posts/Posts\";\nimport Post from \"./components/post/Post\";\nimport Navbar from \"./components/layout/Navbar\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Fragment>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <section className=\"container\">\n            <Alert />\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profiles\" component={Profiles} />\n              <Route exact path=\"/profile/:id\" component={Profile} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute\n                exact\n                path=\"/create-profile\"\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/edit-profile\"\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-experience\"\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-education\"\n                component={AddEducation}\n              />\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\n              <PrivateRoute exact path={`/posts/:id`} component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nconst options = {\n  timeout: 1000,\n  position: positions.BOTTOM_CENTER,\n  transitions: transitions.FADE,\n  offset: \"100px\",\n};\n\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </AlertProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}